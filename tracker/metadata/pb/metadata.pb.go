// Code generated by protoc-gen-go. DO NOT EDIT.
// source: metadata.proto

/*
Package metadata_pb is a generated protocol buffer package.

It is generated from these files:
	metadata.proto

It has these top-level messages:
	UploadFilePrepareReq
	UploadFilePrepareResp
	UploadFileDoneReq
	UploadFileDoneResp
*/
package metadata_pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type UploadFilePrepareReq struct {
	Version     uint32 `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	NodeId      []byte `protobuf:"bytes,2,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	Timestamp   uint64 `protobuf:"varint,3,opt,name=timestamp" json:"timestamp,omitempty"`
	FilePath    string `protobuf:"bytes,4,opt,name=filePath" json:"filePath,omitempty"`
	FileHash    []byte `protobuf:"bytes,5,opt,name=fileHash,proto3" json:"fileHash,omitempty"`
	FileSize    uint64 `protobuf:"varint,6,opt,name=fileSize" json:"fileSize,omitempty"`
	FileName    string `protobuf:"bytes,7,opt,name=fileName" json:"fileName,omitempty"`
	FileModTime uint64 `protobuf:"varint,8,opt,name=fileModTime" json:"fileModTime,omitempty"`
	FileData    []byte `protobuf:"bytes,9,opt,name=fileData,proto3" json:"fileData,omitempty"`
	Sign        []byte `protobuf:"bytes,10,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (m *UploadFilePrepareReq) Reset()                    { *m = UploadFilePrepareReq{} }
func (m *UploadFilePrepareReq) String() string            { return proto.CompactTextString(m) }
func (*UploadFilePrepareReq) ProtoMessage()               {}
func (*UploadFilePrepareReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *UploadFilePrepareReq) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *UploadFilePrepareReq) GetNodeId() []byte {
	if m != nil {
		return m.NodeId
	}
	return nil
}

func (m *UploadFilePrepareReq) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *UploadFilePrepareReq) GetFilePath() string {
	if m != nil {
		return m.FilePath
	}
	return ""
}

func (m *UploadFilePrepareReq) GetFileHash() []byte {
	if m != nil {
		return m.FileHash
	}
	return nil
}

func (m *UploadFilePrepareReq) GetFileSize() uint64 {
	if m != nil {
		return m.FileSize
	}
	return 0
}

func (m *UploadFilePrepareReq) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *UploadFilePrepareReq) GetFileModTime() uint64 {
	if m != nil {
		return m.FileModTime
	}
	return 0
}

func (m *UploadFilePrepareReq) GetFileData() []byte {
	if m != nil {
		return m.FileData
	}
	return nil
}

func (m *UploadFilePrepareReq) GetSign() []byte {
	if m != nil {
		return m.Sign
	}
	return nil
}

type UploadFilePrepareResp struct {
	Done bool `protobuf:"varint,1,opt,name=done" json:"done,omitempty"`
}

func (m *UploadFilePrepareResp) Reset()                    { *m = UploadFilePrepareResp{} }
func (m *UploadFilePrepareResp) String() string            { return proto.CompactTextString(m) }
func (*UploadFilePrepareResp) ProtoMessage()               {}
func (*UploadFilePrepareResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *UploadFilePrepareResp) GetDone() bool {
	if m != nil {
		return m.Done
	}
	return false
}

type UploadFileDoneReq struct {
}

func (m *UploadFileDoneReq) Reset()                    { *m = UploadFileDoneReq{} }
func (m *UploadFileDoneReq) String() string            { return proto.CompactTextString(m) }
func (*UploadFileDoneReq) ProtoMessage()               {}
func (*UploadFileDoneReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type UploadFileDoneResp struct {
}

func (m *UploadFileDoneResp) Reset()                    { *m = UploadFileDoneResp{} }
func (m *UploadFileDoneResp) String() string            { return proto.CompactTextString(m) }
func (*UploadFileDoneResp) ProtoMessage()               {}
func (*UploadFileDoneResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func init() {
	proto.RegisterType((*UploadFilePrepareReq)(nil), "metadata.pb.UploadFilePrepareReq")
	proto.RegisterType((*UploadFilePrepareResp)(nil), "metadata.pb.UploadFilePrepareResp")
	proto.RegisterType((*UploadFileDoneReq)(nil), "metadata.pb.UploadFileDoneReq")
	proto.RegisterType((*UploadFileDoneResp)(nil), "metadata.pb.UploadFileDoneResp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for MatadataService service

type MatadataServiceClient interface {
	UploadFilePrepare(ctx context.Context, in *UploadFilePrepareReq, opts ...grpc.CallOption) (*UploadFilePrepareResp, error)
	UploadFileDone(ctx context.Context, in *UploadFileDoneReq, opts ...grpc.CallOption) (*UploadFileDoneResp, error)
}

type matadataServiceClient struct {
	cc *grpc.ClientConn
}

func NewMatadataServiceClient(cc *grpc.ClientConn) MatadataServiceClient {
	return &matadataServiceClient{cc}
}

func (c *matadataServiceClient) UploadFilePrepare(ctx context.Context, in *UploadFilePrepareReq, opts ...grpc.CallOption) (*UploadFilePrepareResp, error) {
	out := new(UploadFilePrepareResp)
	err := grpc.Invoke(ctx, "/metadata.pb.MatadataService/UploadFilePrepare", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *matadataServiceClient) UploadFileDone(ctx context.Context, in *UploadFileDoneReq, opts ...grpc.CallOption) (*UploadFileDoneResp, error) {
	out := new(UploadFileDoneResp)
	err := grpc.Invoke(ctx, "/metadata.pb.MatadataService/UploadFileDone", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for MatadataService service

type MatadataServiceServer interface {
	UploadFilePrepare(context.Context, *UploadFilePrepareReq) (*UploadFilePrepareResp, error)
	UploadFileDone(context.Context, *UploadFileDoneReq) (*UploadFileDoneResp, error)
}

func RegisterMatadataServiceServer(s *grpc.Server, srv MatadataServiceServer) {
	s.RegisterService(&_MatadataService_serviceDesc, srv)
}

func _MatadataService_UploadFilePrepare_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UploadFilePrepareReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MatadataServiceServer).UploadFilePrepare(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/metadata.pb.MatadataService/UploadFilePrepare",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MatadataServiceServer).UploadFilePrepare(ctx, req.(*UploadFilePrepareReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _MatadataService_UploadFileDone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UploadFileDoneReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MatadataServiceServer).UploadFileDone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/metadata.pb.MatadataService/UploadFileDone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MatadataServiceServer).UploadFileDone(ctx, req.(*UploadFileDoneReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _MatadataService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "metadata.pb.MatadataService",
	HandlerType: (*MatadataServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UploadFilePrepare",
			Handler:    _MatadataService_UploadFilePrepare_Handler,
		},
		{
			MethodName: "UploadFileDone",
			Handler:    _MatadataService_UploadFileDone_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "metadata.proto",
}

func init() { proto.RegisterFile("metadata.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 321 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0xcf, 0x4e, 0xfb, 0x30,
	0x0c, 0xc7, 0x7f, 0xdd, 0x6f, 0xec, 0x8f, 0x07, 0x43, 0x98, 0x81, 0xa2, 0x09, 0x41, 0xe9, 0xa9,
	0x12, 0xd2, 0x0e, 0xf0, 0x0a, 0x13, 0x82, 0xc3, 0x10, 0xea, 0xe0, 0xc6, 0xc5, 0xa3, 0x86, 0x45,
	0x5a, 0x9b, 0xd0, 0x44, 0x3b, 0xf0, 0x44, 0x3c, 0x08, 0x0f, 0x86, 0x12, 0xd6, 0xb5, 0xa0, 0x01,
	0x37, 0x7f, 0x6c, 0x7f, 0xbf, 0x8e, 0xec, 0x40, 0x3f, 0x63, 0x4b, 0x29, 0x59, 0x1a, 0xe9, 0x42,
	0x59, 0x85, 0xbd, 0x8a, 0x67, 0xd1, 0x5b, 0x03, 0x06, 0xf7, 0x7a, 0xa1, 0x28, 0xbd, 0x94, 0x0b,
	0xbe, 0x2d, 0x58, 0x53, 0xc1, 0x09, 0xbf, 0xa0, 0x80, 0xf6, 0x92, 0x0b, 0x23, 0x55, 0x2e, 0x82,
	0x30, 0x88, 0x77, 0x92, 0x12, 0xf1, 0x10, 0x5a, 0xb9, 0x4a, 0xf9, 0x3a, 0x15, 0x8d, 0x30, 0x88,
	0xb7, 0x93, 0x15, 0xe1, 0x11, 0x74, 0xad, 0xcc, 0xd8, 0x58, 0xca, 0xb4, 0xf8, 0x1f, 0x06, 0x71,
	0x33, 0xa9, 0x12, 0x38, 0x84, 0xce, 0x93, 0x9b, 0x40, 0x76, 0x2e, 0x9a, 0x61, 0x10, 0x77, 0x93,
	0x35, 0x97, 0xb5, 0x2b, 0x32, 0x73, 0xb1, 0xe5, 0x3d, 0xd7, 0x5c, 0xd6, 0xa6, 0xf2, 0x95, 0x45,
	0xcb, 0x9b, 0xae, 0xb9, 0xac, 0xdd, 0x50, 0xc6, 0xa2, 0x5d, 0x79, 0x3a, 0xc6, 0x10, 0x7a, 0x2e,
	0x9e, 0xa8, 0xf4, 0x4e, 0x66, 0x2c, 0x3a, 0x5e, 0x5a, 0x4f, 0x95, 0xea, 0x31, 0x59, 0x12, 0xdd,
	0x6a, 0xaa, 0x63, 0x44, 0x68, 0x1a, 0xf9, 0x9c, 0x0b, 0xf0, 0x79, 0x1f, 0x47, 0x67, 0x70, 0xb0,
	0x61, 0x53, 0x46, 0xbb, 0xe6, 0x54, 0xe5, 0xec, 0xf7, 0xd4, 0x49, 0x7c, 0x1c, 0xed, 0xc3, 0x5e,
	0xd5, 0x3c, 0x56, 0xb9, 0xdb, 0x69, 0x34, 0x00, 0xfc, 0x9e, 0x34, 0xfa, 0xfc, 0x3d, 0x80, 0xdd,
	0x09, 0x7d, 0x9e, 0x64, 0xca, 0xc5, 0x52, 0x3e, 0x32, 0x3e, 0xd4, 0xe5, 0xab, 0x59, 0x78, 0x3a,
	0xaa, 0x5d, 0x6e, 0xb4, 0xe9, 0x6a, 0xc3, 0xe8, 0xaf, 0x16, 0xa3, 0xa3, 0x7f, 0x38, 0x85, 0xfe,
	0xd7, 0x77, 0xe0, 0xf1, 0x0f, 0xba, 0xd5, 0xcb, 0x87, 0x27, 0xbf, 0xd6, 0x9d, 0xe9, 0xac, 0xe5,
	0x7f, 0xd7, 0xc5, 0x47, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe2, 0x43, 0x0b, 0x3d, 0x6f, 0x02, 0x00,
	0x00,
}
